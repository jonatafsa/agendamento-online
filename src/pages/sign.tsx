import Head from 'next/head'
import Image from 'next/image'
import toast, { Toaster } from 'react-hot-toast';
import { useState } from 'react'

import styles from '../styles/Sign.module.scss'
import signImage from '../assets/sign-image.jpeg'
import Loading from '../components/Loading';
import { useRouter } from 'next/router';
import Footer from '../components/Footer';

export default function Sign() {

  const router = useRouter()

  const [name, setName] = useState('')
  const [username, setUsername] = useState('')
  const [email, setEmail] = useState('')
  const [job, setJob] = useState('')
  const [password, setPassword] = useState('')

  const [loading, setLoading] = useState(false)

  function toggleFormChange(e: any) {

    if (e.target.innerText === "Cadastrar") {
      e.target.innerText = "Entrar"

      document.querySelector('#form-login')?.classList.add(styles.hide)
      document.querySelector('#form-register')?.classList.remove(styles.hide)
    } else {
      e.target.innerText = "Cadastrar"

      document.querySelector('#form-login')?.classList.remove(styles.hide)
      document.querySelector('#form-register')?.classList.add(styles.hide)
    }

    // form!.classList.toggle(styles.active)
  }

  function toggleRegisterUser(e: any) {
    e.preventDefault()
    setLoading(true)

    const user = {
      name,
      username,
      email,
      job,
      password
    }

    fetch('/api/insert-new-user', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(user)
    })
      .then(res => {
        console.log(res.status)

        res.json().then(data => {
          console.log(data)

          if (res.status === 200) {
            toast.success('Usuário cadastrado com sucesso!')
            setLoading(true)
          }

          if (res.status === 401) {
            toast.error(data.target + ' já está em uso!')

            const input = document.querySelector(`#${data.target}-register`) as HTMLInputElement
            input.focus()
            input.classList.add('inputError')
            console.log(input)
            setLoading(false)
          }
        })
      })

  }

  function toggleLoginUser(e: any) {
    e.preventDefault()
    setLoading(true)

    const username = document.getElementById('username-login') as HTMLInputElement
    const password = document.getElementById('password-login') as HTMLInputElement

    const user = {
      username: username.value,
      password: password.value
    }

    fetch('/api/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(user)
    })
      .then(res => {
        console.log(res.status)

        res.json().then(data => {
          console.log(data)

          if (res.status === 200) {
            toast.success('Usuário logado com sucesso!')
            localStorage.setItem('token', data.token)
            router.replace('/')
            return
          }

          if (res.status === 401) {
            toast.error('Usuário ou senha incorretos!')

            const input = document.querySelector(`#${data.target}-login`) as HTMLInputElement
            input.focus()
            input.classList.add('inputError')
            setLoading(false)
          }

          if (res.status === 500) {
            toast.error('Erro interno do servidor!')
            setLoading(false)
          }
        })
      })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Entrar - Registrar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {loading && <Loading />}

      <header>
        <Image src={signImage} alt="Sign image" width={409} height={272} placeholder="blur" />
        <div className={styles.endHeader}></div>
        <div className={styles.endHeader}></div>
      </header>


      <main>
        <h1>Bem vindo a JS-W</h1>
        <p>Crie seua agenda e distribua para seus clientes.</p>

        <button onClick={toggleFormChange}>Cadastrar</button>

        <form
          id="form-login"
          className={`${styles.signupForm} ${styles.formInEntrance}`}
          onSubmit={toggleLoginUser}
        >
          <div>
            <label htmlFor="username">Usuário</label>
            <input
              type="username"
              placeholder="ex: joao123"
              id="username-login"
              onBlur={e => e.target.classList.remove('inputError')}
            />
          </div>

          <div>
            <label htmlFor="password">Senha</label>
            <input
              type="password"
              placeholder="Senha"
              id="password-login"
              onBlur={e => e.target.classList.remove('inputError')}
            />
          </div>

          <button>Entrar</button>

          <div className={styles.formGrid}>
            <div>
              <input type="checkbox" id="remember" />
              <label htmlFor="remember">Lembrar-me</label>
            </div>

            <a href="#">Esqueci minha senha</a>
          </div>
        </form>

        <form
          id="form-register"
          className={`${styles.loginForm} ${styles.hide} ${styles.formInEntrance}`}
          onSubmit={toggleRegisterUser}
        >

          <div>
            <label htmlFor="name">Seu nome</label>
            <input
              type="name"
              placeholder="Ex: Jonata Santos"
              id="name"
              value={name}
              onChange={e => setName(e.target.value)}
            />
          </div>

          <div>
            <label htmlFor="username">Usuário</label>
            <input
              type="username"
              placeholder="ex: JonataFSA"
              id="username-register"
              value={username}
              onChange={e => setUsername(e.target.value)}
            />
          </div>

          <div>
            <label htmlFor="email">E-mail</label>
            <input
              type="email"
              placeholder="ex: user@mail.com"
              id="email-register"
              value={email}
              // className="inputError"
              onChange={e => setEmail(e.target.value)}
              onBlur={() => document.getElementById('email-register')!.classList.remove('inputError')}
            />
          </div>

          <div>
            <label htmlFor="job">Seu serviço</label>
            <input
              type="job"
              placeholder="ex: Desenvolver Web"
              id="job"
              value={job}
              onChange={e => setJob(e.target.value)}
            />
          </div>

          <div>
            <label htmlFor="password">Senha</label>
            <input
              type="password"
              id="password"
              value={password}
              onChange={e => setPassword(e.target.value)}
            />
          </div>

          <button>Entrar</button>

          <div className={styles.formGrid}>
            <div>
              <input type="checkbox" id="remember" />
              <label htmlFor="remember">Lembrar-me</label>
            </div>

            <a href="#">Esqueci minha senha</a>
          </div>
        </form>

        <Footer />
      </main>

      <Toaster
        position="bottom-center"
        reverseOrder={false}
      />
    </div>
  )
}
